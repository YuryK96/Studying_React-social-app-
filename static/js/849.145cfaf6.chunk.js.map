{"version":3,"file":"static/js/849.145cfaf6.chunk.js","mappings":"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","sources":["webpack://social_network-pet_project-/./src/components/Dialogs/Dialogs.module.scss?d037","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","redux/dialog-selectors.ts","components/Dialogs/Dialogs.tsx","../node_modules/@mui/icons-material/Send.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__b34ac\",\"dialogWrapper\":\"Dialogs_dialogWrapper__+dQPK\",\"dialog\":\"Dialogs_dialog__rddjn\",\"active\":\"Dialogs_active__EakWQ\",\"messages\":\"Dialogs_messages__+JgAM\",\"form_Message\":\"Dialogs_form_Message__9UTYw\",\"dialog_link\":\"Dialogs_dialog_link__ooZLW\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { DialogType, MessageType } from \"../../../types/types\";\r\nimport DialogsCss from \"../Dialogs.module.scss\";\r\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nconst Messages: React.FC<PropsTypeMessages> = ({\r\n  messagesData,\r\n  addNewMessage,\r\n}) => {\r\n  const location = useLocation();\r\n  const [userIndex, getUserIndex] = useState(0);\r\n  const [urlId, getUrlId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const url = new URLSearchParams(location.pathname);\r\n    const urlId = Number(url.get(\"userId\"));\r\n    getUrlId(urlId);\r\n    getUserIndex(messagesData.findIndex((x) => x.id === urlId));\r\n  }, [location.pathname]);\r\n\r\n  let arrMessages = messagesData[userIndex].messagesData.map((item, i) => {\r\n    return (\r\n      <Box key={i} sx={{ paddingTop: 1 }} >\r\n        <Typography>{item.message}</Typography>\r\n      </Box>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Box sx={{height: \"80vh\", padding:1, paddingLeft: 2}}>\r\n    <Box sx={{display: \"flex\", flexDirection:\"column\", minHeight: \"60%\"}} >\r\n       {arrMessages}</Box>\r\n      <NewMessage addNewMessage={addNewMessage} urlId={urlId} />\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n\r\nconst NewMessage: React.FC<PropsTypeNewMessage> = ({\r\n  addNewMessage,\r\n  urlId,\r\n}) => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm<FormValues>();\r\n\r\n  const onSubmit: SubmitHandler<FormValues> = (data) => {\r\n    addNewMessage(data.newMessage, urlId);\r\n    reset();\r\n  };\r\n  return (\r\n    <Box>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={DialogsCss.form_Message}>\r\n        <TextField  label=\"New Message\"\r\n                    multiline\r\n                    minRows={3} {...register(\"newMessage\")} ></TextField>\r\n        <Box sx={{marginTop: 1}}>\r\n          <Button sx={{width:\"100%\"}} type=\"submit\" variant=\"outlined\" endIcon={<SendIcon />}  >Send</Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\ntype PropsTypeNewMessage = {\r\n  addNewMessage: (newMessage: string, userIndex: number) => void;\r\n  urlId: number;\r\n};\r\n\r\ntype FormValues = {\r\n  newMessage: string;\r\n};\r\n\r\ntype PropsTypeMessages = {\r\n  addNewMessage: (newMessage: string, urlId: number) => void;\r\n  messagesData: Array<DialogType>;\r\n};\r\n","import DialogsCss from \"../Dialogs.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { DialogType } from \"../../../types/types\";\r\nimport { Avatar, Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem: React.FC<Propstype> = ({ dialogsData }) => {\r\n  let arrDialog = dialogsData.map((dialog) => {\r\n    return (\r\n      <Box key={dialog.id} sx={{paddingTop:1}} >\r\n        <NavLink to={\"/Messages/&userId=\" + dialog.id} className={DialogsCss.dialog_link}>\r\n          <Avatar> {dialog.name.charAt(0)}</Avatar>\r\n          <Typography sx={{width:\"max-content\"}}>{dialog.name}</Typography>\r\n        </NavLink>\r\n      </Box>\r\n    );\r\n  });\r\n\r\n  return <Box sx={{width:'max-content'}} className={DialogsCss.dialogWrapper}>{arrDialog}</Box>;\r\n};\r\n\r\nexport default DialogItem;\r\n\r\ntype Propstype = {\r\n  dialogsData: Array<DialogType>;\r\n};\r\n","import { AppStateType } from \"./redux-store\";\r\n\r\nexport const getDialogsData = (state: AppStateType) => {\r\n  return state.dialogsPage.dialogsData;\r\n};\r\n","import DialogsCss from \"./Dialogs.module.scss\";\r\nimport Messages from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDialogsData } from \"../../redux/dialog-selectors\";\r\nimport { AppDispatch } from \"../../redux/redux-store\";\r\nimport { actions } from \"../../redux/dialog-reducer\";\r\n\r\nimport { WithAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nconst Dialogs: React.FC<PropsType> = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const dialogsData = useSelector(getDialogsData);\r\n\r\n  const handleAddNewMessage = (newMessage: string, id: number) => {\r\n    dispatch(actions.addNewMessage(newMessage, id));\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container>\r\n        <Grid item xs={2}>\r\n\r\n      <DialogItem dialogsData={dialogsData} />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n      <Messages\r\n        addNewMessage={handleAddNewMessage}\r\n        messagesData={dialogsData}\r\n      />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\nexport default compose(WithAuthRedirect)(Dialogs);\r\n\r\ntype PropsType = any;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;"],"names":["messagesData","addNewMessage","location","useLocation","useState","userIndex","getUserIndex","urlId","getUrlId","useEffect","url","URLSearchParams","pathname","Number","get","findIndex","x","id","arrMessages","map","item","i","Box","sx","paddingTop","Typography","message","height","padding","paddingLeft","display","flexDirection","minHeight","NewMessage","useForm","register","handleSubmit","formState","errors","reset","onSubmit","data","newMessage","className","DialogsCss","TextField","label","multiline","minRows","marginTop","Button","width","type","variant","endIcon","Send","arrDialog","dialogsData","dialog","to","Avatar","name","charAt","getDialogsData","state","dialogsPage","compose","WithAuthRedirect","dispatch","useDispatch","useSelector","Grid","container","xs","Message","actions","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}