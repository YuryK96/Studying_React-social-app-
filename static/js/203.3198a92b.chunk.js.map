{"version":3,"file":"static/js/203.3198a92b.chunk.js","mappings":"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","sources":["webpack://social_network-pet_project-/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatuswithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social_network-pet_project-/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social_network-pet_project-/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ProfileInfo_item__e808d\",\"content\":\"ProfileInfo_content__zbUR2\",\"head_img\":\"ProfileInfo_head_img__TnzrM\",\"avatar\":\"ProfileInfo_avatar__twI4q\",\"status\":\"ProfileInfo_status__osEoK\",\"label\":\"ProfileInfo_label__EfUPH\"};","import ProfileInfoCss from \"./ProfileInfo.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ProfileDataForm = ({\r\n  profile,\r\n  isOwner,\r\n  savePhoto,\r\n  OutFromEditMode,\r\n  updateProfile,\r\n  userId,\r\n}) => {\r\n  const {\r\n    register,\r\n    formState: { errors, isValid },\r\n    handleSubmit,\r\n    reset,\r\n    setError,\r\n    clearErrors,\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const mainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    updateProfile(data, userId, setError);\r\n    reset();\r\n    OutFromEditMode();\r\n  };\r\n\r\n  return (\r\n    <div className={ProfileInfoCss.item}>\r\n      <div className={ProfileInfoCss.avatar}>\r\n        <div className={ProfileInfoCss.name}>\r\n          <b> {profile.fullName} </b>\r\n        </div>\r\n        <img\r\n          src={\r\n            profile.photos.large ||\r\n            \"https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?w=2000\"\r\n          }\r\n          alt=\"\"\r\n        />\r\n\r\n        {isOwner && (\r\n          <input type={\"file\"} onChange={(e) => mainPhotoSelected(e)} />\r\n        )}\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div>\r\n          <div>\r\n            <div>\r\n              <b> Name</b>\r\n            </div>\r\n            <input\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"name\", {\r\n                value: profile.fullName,\r\n                required: \"need to fill form\",\r\n\r\n                minLength: {\r\n                  value: 1,\r\n\r\n                  message: \"need more symbols\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <div>\r\n            {(errors?.name && (\r\n              <p style={{ color: \"red\" }}>\r\n                {errors?.name?.message || \"Error!\"}\r\n              </p>\r\n            )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n          </div>{\" \"}\r\n          <div>\r\n            {\" \"}\r\n            <b> About Me</b>\r\n          </div>\r\n          <input\r\n            onFocus={() => {\r\n              clearErrors();\r\n            }}\r\n            {...register(\"aboutMe\", {\r\n              required: \"need to fill form\",\r\n              value: profile.aboutMe,\r\n              minLength: {\r\n                value: 1,\r\n\r\n                message: \"need more symbols\",\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n        <div>\r\n          {(errors?.aboutMe && (\r\n            <p style={{ color: \"red\" }}>\r\n              {errors?.aboutMe?.message || \"Error!\"}\r\n            </p>\r\n          )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n        </div>\r\n\r\n        <div>\r\n          {\" \"}\r\n          <b> Work </b>\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"lookingForAJob\">Are you looking for a job?</label>{\" \"}\r\n          <input {...register(\"lookingForAJob\")} type={\"checkbox\"} />\r\n        </div>\r\n\r\n        <div>\r\n          <div>\r\n            <label\r\n              style={{ display: \"block\" }}\r\n              htmlFor=\"lookingForAJobDescription\"\r\n            >\r\n              dream job describtion\r\n            </label>\r\n            <input\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              type=\"text\"\r\n              {...register(\"lookingForAJobDescription\", {\r\n                required: \"need to fill form\",\r\n                value: profile.lookingForAJobDescription,\r\n                minLength: {\r\n                  value: 1,\r\n\r\n                  message: \"need more symbols\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <div>\r\n            {errors?.lookingForAJobDescription && (\r\n              <p style={{ color: \"red\" }}>\r\n                {errors?.lookingForAJobDescription?.message || \"Error!\"}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div>\r\n            {\" \"}\r\n            <b> Contacts</b>\r\n          </div>\r\n          <div>\r\n            <label className={ProfileInfoCss.label} htmlFor=\"facebook \">\r\n              facebook:\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"facebook\", {\r\n                value: profile.contacts.facebook,\r\n              })}\r\n            />\r\n\r\n            <div>\r\n              {(errors?.facebook && (\r\n                <p style={{ color: \"red\" }}>\r\n                  {errors?.facebook?.message || \"Error!\"}\r\n                </p>\r\n              )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className={ProfileInfoCss.label} htmlFor=\"website \">\r\n              website:\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"website\", {\r\n                value: profile.contacts.website,\r\n              })}\r\n            />\r\n\r\n            <div>\r\n              {(errors?.website && (\r\n                <p style={{ color: \"red\" }}>\r\n                  {errors?.website?.message || \"Error!\"}\r\n                </p>\r\n              )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className={ProfileInfoCss.label} htmlFor=\"vk \">\r\n              vk:\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"vk\", {\r\n                value: profile.contacts.vk,\r\n              })}\r\n            />\r\n\r\n            <div>\r\n              {(errors?.vk && (\r\n                <p style={{ color: \"red\" }}>\r\n                  {errors?.vk?.message || \"Error!\"}\r\n                </p>\r\n              )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className={ProfileInfoCss.label} htmlFor=\"twitter \">\r\n              twitter:\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"twitter\", {\r\n                value: profile.contacts.twitter,\r\n              })}\r\n            />\r\n\r\n            <div>\r\n              {(errors?.twitter && (\r\n                <p style={{ color: \"red\" }}>\r\n                  {errors?.twitter?.message || \"Error!\"}\r\n                </p>\r\n              )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className={ProfileInfoCss.label} htmlFor=\"instagram \">\r\n              instagram:\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"instagram\", {\r\n                value: profile.contacts.instagram,\r\n              })}\r\n            />\r\n\r\n            <div>\r\n              {(errors?.instagram && (\r\n                <p style={{ color: \"red\" }}>\r\n                  {errors?.instagram?.message || \"Error!\"}\r\n                </p>\r\n              )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className={ProfileInfoCss.label} htmlFor=\"youtube \">\r\n              youtube:\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"youtube\", {\r\n                value: profile.contacts.youtube,\r\n              })}\r\n            />\r\n\r\n            <div>\r\n              {(errors?.youtube && (\r\n                <p style={{ color: \"red\" }}>\r\n                  {errors?.youtube?.message || \"Error!\"}\r\n                </p>\r\n              )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label className={ProfileInfoCss.label} htmlFor=\"github \">\r\n              github:\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"github\", {\r\n                value: profile.contacts.github,\r\n              })}\r\n            />\r\n\r\n            <div>\r\n              {(errors?.github && (\r\n                <p style={{ color: \"red\" }}>\r\n                  {errors?.github?.message || \"Error!\"}\r\n                </p>\r\n              )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className={ProfileInfoCss.label} htmlFor=\"mainLink \">\r\n              mainLink:\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              onFocus={() => {\r\n                clearErrors();\r\n              }}\r\n              {...register(\"mainLink\", {\r\n                value: profile.contacts.mainLink,\r\n              })}\r\n            />\r\n\r\n            <div>\r\n              {(errors?.mainLink && (\r\n                <p style={{ color: \"red\" }}>\r\n                  {errors?.mainLink?.message || \"Error!\"}\r\n                </p>\r\n              )) || <p style={{ color: \"red\" }}>{errors?.server?.message}</p>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <input disabled={!isValid} type=\"submit\" />\r\n        </div>\r\n      </form>\r\n      <div>\r\n        <button onClick={OutFromEditMode}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import ProfileInfoCss from \"./ProfileInfo.module.css\";\r\n\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatuswithHooks = ({ status, updateStatus }) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [statusState, setStatusState] = useState(status);\r\n\r\n  useEffect(() => {\r\n    setStatusState(status);\r\n  }, [status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    updateStatus(statusState);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatusState(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span role=\"span\" onDoubleClick={activateEditMode}>\r\n            {status || \"------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          {\" \"}\r\n          <input\r\n            autoFocus\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={statusState}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatuswithHooks;\r\n","import { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileInfoCss from \"./ProfileInfo.module.css\";\r\nimport ProfileStatuswithHooks from \"./ProfileStatuswithHooks\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  updateProfile,\r\n  userId,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={ProfileInfoCss.content}>\r\n      <div className={ProfileInfoCss.head_img}>\r\n        <img\r\n          src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      {editMode ? (\r\n        <ProfileDataForm\r\n          OutFromEditMode={() => {\r\n            setEditMode(false);\r\n          }}\r\n          profile={profile}\r\n          isOwner={isOwner}\r\n          updateProfile={updateProfile}\r\n          userId={userId}\r\n        />\r\n      ) : (\r\n        <ProfileData\r\n          profile={profile}\r\n          isOwner={isOwner}\r\n          savePhoto={savePhoto}\r\n          goToEditMode={() => {\r\n            setEditMode(true);\r\n          }}\r\n        />\r\n      )}\r\n      <div className={ProfileInfoCss.status}>\r\n        <ProfileStatuswithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div className={ProfileInfoCss.item}>\r\n      {isOwner && (\r\n        <div>\r\n          {\" \"}\r\n          <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n      <div className={ProfileInfoCss.avatar}>\r\n        <div className={ProfileInfoCss.name}>\r\n          <b> {profile.fullName} </b>\r\n        </div>\r\n        <img\r\n          src={\r\n            profile.photos.large ||\r\n            \"https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?w=2000\"\r\n          }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        {\" \"}\r\n        <b> About Me</b>\r\n      </div>\r\n      <div className={ProfileInfoCss.aboutMe}>{profile.aboutMe}</div>\r\n\r\n      <div>\r\n        <div>\r\n          {\" \"}\r\n          <b> Work </b>\r\n        </div>\r\n        {profile.lookingForAJob ? (\r\n          <div>Open to work </div>\r\n        ) : (\r\n          <div>Not in looking for</div>\r\n        )}\r\n        <div>{profile.lookingForAJobDescription}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <div>\r\n          {\" \"}\r\n          <b> Contacts</b>\r\n        </div>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contacts\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      {contactTitle} : {contactValue}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"newMessage\":\"MyPosts_newMessage__RVi5U\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Post_wrapper__kyEaw\",\"post\":\"Post_post__b7TRF\",\"likes\":\"Post_likes__uuGyZ\",\"countLikes\":\"Post_countLikes__szywF\"};","import PostCss from './Post.module.css'\r\n\r\n\r\nconst Post = ({countLikes, value}) => {\r\n\r\n    return (\r\n\r\n        <div className={PostCss.wrapper}>\r\n            <img src=\"https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?w=2000\" alt=\"\" />\r\n            <div className={PostCss.likes} >likes: <p className={PostCss.countLikes}>{countLikes}</p></div>\r\n            <div className={PostCss.post}>{value}</div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\n\r\nconst MyPosts = React.memo(\r\n  ({ myPostData, newPostText, onChangePost, onAddPost }) => {\r\n    const {\r\n      register,\r\n      formState: { errors, isValid },\r\n      handleSubmit,\r\n      reset,\r\n    } = useForm();\r\n\r\n    let arrPostData = myPostData.map((post, i) => {\r\n      return <Post key={i} value={post.value} countLikes={post.countLikes} />;\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n      onAddPost(data.newPostText);\r\n      reset();\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <textarea\r\n            className={s.newMessage}\r\n            style={errors?.newPostText ? { border: \"1px solid red\" } : null}\r\n            {...register(\"newPostText\", {\r\n              required: \"need to text something\",\r\n              maxLength: {\r\n                value: 20,\r\n                message: \"need less 20 symbols\",\r\n              },\r\n            })}\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n          />\r\n          <div>\r\n            <p style={{ color: \"red\" }}>{errors?.newPostText?.message}</p>{\" \"}\r\n            <input type={\"submit\"} />\r\n          </div>\r\n        </form>\r\n        {arrPostData}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { onAddPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    myPostData: state.profilePage.myPostData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, { onAddPost }))(MyPosts);\r\n","import ProfileCss from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  updateProfile,\r\n  userId,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        savePhoto={savePhoto}\r\n        updateProfile={updateProfile}\r\n        userId={userId}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n  setUser,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  updateProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.userId;\r\n    }\r\n    this.props.setUser(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          isOwner={!this.props.router.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n          updateProfile={this.props.updateProfile}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUser,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    updateProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["profile","isOwner","savePhoto","OutFromEditMode","updateProfile","userId","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","setError","clearErrors","className","ProfileInfoCss","fullName","src","photos","large","alt","type","onChange","e","target","files","length","mainPhotoSelected","onSubmit","data","onFocus","value","required","minLength","message","name","style","color","server","aboutMe","htmlFor","display","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","disabled","onClick","status","updateStatus","useState","editMode","setEditMode","statusState","setStatusState","useEffect","role","onDoubleClick","autoFocus","onBlur","currentTarget","ProfileData","goToEditMode","lookingForAJob","Object","keys","map","key","Contacts","contactTitle","contactValue","Preloader","countLikes","PostCss","React","myPostData","onAddPost","newPostText","onChangePost","arrPostData","post","i","s","border","maxLength","cols","rows","compose","connect","state","profilePage","MyPosts","MyPostsContainer","ProfileContainer","this","props","router","params","setUser","getStatus","refreshProfile","prevProps","prevState","snapshot","userProfile","auth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}