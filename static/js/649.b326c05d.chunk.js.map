{"version":3,"file":"static/js/649.b326c05d.chunk.js","mappings":"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","sources":["webpack://social_network-pet_project-/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatuswithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social_network-pet_project-/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social_network-pet_project-/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ProfileInfo_content__zbUR2\",\"head_img\":\"ProfileInfo_head_img__TnzrM\",\"avatar\":\"ProfileInfo_avatar__twI4q\"};","import ProfileInfoCss from \"./ProfileInfo.module.css\";\r\n\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatuswithHooks = ({ status, updateStatus }) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [statusState, setStatusState] = useState(status);\r\n\r\n  useEffect(() => {\r\n    setStatusState(status);\r\n  }, [status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    updateStatus(statusState);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatusState(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span role=\"span\" onDoubleClick={activateEditMode}>\r\n            {status || \"------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          {\" \"}\r\n          <input\r\n            autoFocus\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={statusState}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatuswithHooks;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileInfoCss from \"./ProfileInfo.module.css\";\r\nimport ProfileStatuswithHooks from \"./ProfileStatuswithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const mainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div className={ProfileInfoCss.content}>\r\n      <div className={ProfileInfoCss.head_img}>\r\n        <img\r\n          src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className={ProfileInfoCss.avatar}>\r\n        <img\r\n          src={\r\n            profile.photos.large ||\r\n            \"https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?w=2000\"\r\n          }\r\n          alt=\"\"\r\n        />\r\n        {isOwner && (\r\n          <input type={\"file\"} onChange={(e) => mainPhotoSelected(e)} />\r\n        )}\r\n\r\n        <ProfileStatuswithHooks status={status} updateStatus={updateStatus} />\r\n        <div>\r\n          <div>Social Network</div>\r\n\r\n          <div>\r\n            <a target=\"_blank\" href={profile.contacts.facebook}>\r\n              Faceebook\r\n            </a>\r\n          </div>\r\n\r\n          <div>\r\n            <a target=\"_blank\" href={profile.contacts.vk}>\r\n              vk\r\n            </a>\r\n          </div>\r\n\r\n          <div>\r\n            <a target=\"_blank\" href={profile.contacts.twitter}>\r\n              twitter\r\n            </a>\r\n          </div>\r\n\r\n          <div>\r\n            <a target=\"_blank\" href={profile.contacts.github}>\r\n              gitHub\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>Work</div>\r\n          {profile.lookingForAJob ? <div>Open to work </div> : null}\r\n          <div>{profile.lookingForAJobDescription}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"newMessage\":\"MyPosts_newMessage__RVi5U\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Post_wrapper__kyEaw\",\"post\":\"Post_post__b7TRF\",\"likes\":\"Post_likes__uuGyZ\",\"countLikes\":\"Post_countLikes__szywF\"};","import PostCss from './Post.module.css'\r\n\r\n\r\nconst Post = ({countLikes, value}) => {\r\n\r\n    return (\r\n\r\n        <div className={PostCss.wrapper}>\r\n            <img src=\"https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?w=2000\" alt=\"\" />\r\n            <div className={PostCss.likes} >likes: <p className={PostCss.countLikes}>{countLikes}</p></div>\r\n            <div className={PostCss.post}>{value}</div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\n\r\nconst MyPosts = React.memo(\r\n  ({ myPostData, newPostText, onChangePost, onAddPost }) => {\r\n    const {\r\n      register,\r\n      formState: { errors, isValid },\r\n      handleSubmit,\r\n      reset,\r\n    } = useForm();\r\n\r\n    let arrPostData = myPostData.map((post, i) => {\r\n      return <Post key={i} value={post.value} countLikes={post.countLikes} />;\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n      onAddPost(data.newPostText);\r\n      reset();\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <textarea\r\n            className={s.newMessage}\r\n            style={errors?.newPostText ? { border: \"1px solid red\" } : null}\r\n            {...register(\"newPostText\", {\r\n              required: \"need to text something\",\r\n              maxLength: {\r\n                value: 20,\r\n                message: \"need less 20 symbols\",\r\n              },\r\n            })}\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n          />\r\n          <div>\r\n            <p style={{ color: \"red\" }}>{errors?.newPostText?.message}</p>{\" \"}\r\n            <input type={\"submit\"} />\r\n          </div>\r\n        </form>\r\n        {arrPostData}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { onAddPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    myPostData: state.profilePage.myPostData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, { onAddPost }))(MyPosts);\r\n","import ProfileCss from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        savePhoto={savePhoto}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n  setUser,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.userId;\r\n    }\r\n    this.props.setUser(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          isOwner={!this.props.router.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUser,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["status","updateStatus","useState","editMode","setEditMode","statusState","setStatusState","useEffect","role","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","value","profile","isOwner","savePhoto","Preloader","className","ProfileInfoCss","src","alt","photos","large","type","target","files","length","mainPhotoSelected","href","contacts","facebook","vk","twitter","github","lookingForAJob","lookingForAJobDescription","countLikes","PostCss","React","myPostData","onAddPost","newPostText","onChangePost","useForm","register","formState","errors","handleSubmit","isValid","reset","arrPostData","map","post","i","onSubmit","data","s","style","border","required","maxLength","message","cols","rows","color","compose","connect","state","profilePage","MyPosts","MyPostsContainer","ProfileContainer","userId","this","props","router","params","setUser","getStatus","refreshProfile","prevProps","prevState","snapshot","userProfile","auth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}